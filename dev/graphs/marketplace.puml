@startuml

allowmixing

namespace marketplace {
    component bitstamp #lightskyblue
    component krakenex #lightskyblue

interface Marketplace {
    place_order()
    get_spot_price()
    get_name()
    get_balance()
    get_withdrawal_fee()
    withdrawal()
}

class BuyError
class TickerError
class WithdrawalError

Marketplace -> BuyError
Marketplace -> TickerError
Marketplace -> WithdrawalError

core.Price <-- Marketplace
core.Trade <-- Marketplace
core.AssetPair <-- Marketplace

class KrakenexMarketplace implements Marketplace

class BitstampMarketplace implements Marketplace
BitstampMarketplace --> bitstamp

class marketplace {
{static} make_marketplace()
}

KrakenexMarketplace <-- marketplace::make_marketplace
BitstampMarketplace <-- marketplace::make_marketplace

class KrakenWithdrawalConfig {
    coin: str
    target: str
    fee_limit_percent: float
}

class KrakenConfig {
    key: str
    secret: str
    prefer_fee_in_base_currency: bool
    withdrawal: List[KrakenWithdrawalConfig]
}

KrakenWithdrawalConfig --* KrakenConfig

KrakenConfig <-- KrakenexMarketplace

class BitstampConfig {
    username: str
    key: str
    secret: str
}

BitstampConfig <-- BitstampMarketplace

interface KrakenexInterface {
    query_public()
    query_private()
}

class KrakenexMock implements KrakenexInterface

KrakenexMarketplace --> KrakenexInterface

KrakenexInterface <|.. krakenex


component ccxt #lightskyblue

class CCXTConfig {
exchange: str
parameters: dict
}

class CCXTMarketplace implements Marketplace
CCXTConfig <-- CCXTMarketplace
CCXTMarketplace --> ccxt
CCXTMarketplace <-- marketplace::make_marketplace

}

@enduml